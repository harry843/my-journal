name: 'Send New Blog Post Notification'

on:
  repository_dispatch:
    types: [sanity_blog_published]

jobs:
  retrieve-subscribers:
    runs-on: ubuntu-latest
    steps:
      - name: 'Retrieve Active Subscribers from Buttondown'
        id: retrieve_subscribers
        run: |
          echo "## Retrieving active subscribers from Buttondown"
          
          # Make API request and format data with jq
          SUBSCRIBERS_DATA=$(curl -s -X GET "https://api.buttondown.email/v1/subscribers" -H "Authorization: Token ${{ secrets.BUTTONDOWN_API_KEY }}" | jq '[.results[] | select(.type != "unactivated") | {firstName: .metadata.firstName, lastName: .metadata.surname, email: .email_address, language: .metadata.language}]')

          # Escape JSON for environment variable
          ESCAPED_SUBSCRIBERS_DATA=$(echo "$SUBSCRIBERS_DATA" | jq -c '.' | sed 's/"/\\"/g')

          # Set environment variable
          echo "subscribers_data=$ESCAPED_SUBSCRIBERS_DATA" >> "$GITHUB_ENV"
          
          # Set output (for use in subsequent steps)
          echo "subscribers_data=$ESCAPED_SUBSCRIBERS_DATA" >> "$GITHUB_OUTPUT"

          echo "Subscribers Data: $ESCAPED_SUBSCRIBERS_DATA"

  filter-webhook-data:
    runs-on: ubuntu-latest
    steps:
      - name: 'Filter Webhook Data for English Content'
        id: filter_english_content
        run: |
          echo "## Filtering English blog post from webhook data"

          # Parse the payload into a JSON object
          PAYLOAD_JSON='${{ toJson(github.event.client_payload) }}'
          PAYLOAD_JSON=$(echo "$PAYLOAD_JSON" | jq -c '.')

          # Debug the payload and its type
          echo "PAYLOAD_JSON: $PAYLOAD_JSON"
          echo "PAYLOAD_JSON Type: $(echo "$PAYLOAD_JSON" | jq -c 'type')"

          ENGLISH_POST=$(echo "$PAYLOAD_JSON" | jq -c 'select(.language == "en")')

          # Set environment variable (with proper escaping)
          echo "english_post=$(echo "$ENGLISH_POST" | jq -c '.' | sed 's/"/\\"/g')" >> "$GITHUB_ENV"
          echo "english_post=$(echo "$ENGLISH_POST" | jq -c '.' | sed 's/"/\\"/g')" >> "$GITHUB_OUTPUT"
          
          # Debug: Print the value being set
          echo "Value being set for english_post: ${ENGLISH_POST}"

          # Debug: Verify the environment variable is set
          echo "Verifying english_post in the same step:"
          echo "english_post: $english_post"

      - name: 'Filter Webhook Data for Spanish Content'
        id: filter_spanish_content
        run: |
          echo "## Filtering Spanish blog post from webhook data"

          # Parse the payload into a JSON object
          PAYLOAD_JSON='${{ toJson(github.event.client_payload) }}'
          PAYLOAD_JSON=$(echo "$PAYLOAD_JSON" | jq -c '.')

          # Debug the payload and its type
          echo "PAYLOAD_JSON: $PAYLOAD_JSON"
          echo "PAYLOAD_JSON Type: $(echo "$PAYLOAD_JSON" | jq -c 'type')"

          SPANISH_POST=$(echo "$PAYLOAD_JSON" | jq -c 'select(.language == "es")')

          # Set environment variable (with proper escaping)
          echo "spanish_post=$(echo "$SPANISH_POST" | jq -c '.' | sed 's/"/\\"/g')" >> "$GITHUB_ENV"
          echo "spanish_post=$(echo "$SPANISH_POST" | jq -c '.' | sed 's/"/\\"/g')" >> "$GITHUB_OUTPUT"

          # Debug: Print the value being set
          echo "Value being set for spanish_post: ${SPANISH_POST}"

          # Debug: Verify the environment variable is set
          echo "Verifying spanish_post in the same step:"
          echo "spanish_post: $spanish_post"

  send-english-emails:
    runs-on: ubuntu-latest
    needs: [filter-webhook-data, retrieve-subscribers]
    if: ${{ needs.filter-webhook-data.outputs.english_post != '' }}
    steps:
      - name: 'Filter English Subscribers'
        id: filter_english
        run: |
          echo "## Filtering English subscribers"
          ENGLISH_SUBSCRIBERS=$(echo "${{ needs.retrieve-subscribers.outputs.subscribers_data }}" | jq -r '.[] | select(.language == null or .language == "en") | .email' | tr '\n' ',')
          echo "english_emails=${ENGLISH_SUBSCRIBERS}" >> "$GITHUB_ENV"
          echo "english_emails=${ENGLISH_SUBSCRIBERS}" >> "$GITHUB_OUTPUT"
          echo "English Subscribers: $english_emails"

      - name: 'Send Email to English Subscribers'
        run: |
          echo "## Sending email to English subscribers"
          curl -X POST "https://api.buttondown.email/v1/emails" \
          -H "Authorization: Token ${{ secrets.BUTTONDOWN_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "subject": "New Post: {{needs.filter-webhook-data.outputs.english_post.title}}",
            "from": "harry-kelleher@buttondown.email",
            "to": "${{ steps.filter_english.outputs.english_emails }}",
            "html_body": "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>New Blog Post</title><style>@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap');body{font-family:'Inter',sans-serif;background-color:#f8f9fa;color:#333;text-align:center;padding:40px 0;}.card-container{display:flex;justify-content:center;align-items:center;margin:20px;}.card{max-width:500px;background:white;border-radius:12px;box-shadow:0px 4px 12px rgba(0,0,0,0.1);overflow:hidden;text-decoration:none;transition:transform 0.2s ease-in-out;}.card:hover{transform:scale(1.03);}.card img{width:100%;height:auto;border-bottom:1px solid #ddd;}.card-content{padding:20px;}.card-title{font-size:20px;font-weight:600;margin-bottom:10px;color:#222;}.card-description{font-size:16px;font-weight:400;color:#555;line-height:1.5;}.footer{margin-top:30px;font-size:14px;color:#777;}</style></head><body><div class=\"card-container\"><a href=\"{{needs.filter-webhook-data.outputs.english_post.url}}\" class=\"card\"><img src=\"{{needs.filter-webhook-data.outputs.english_post.imageUrl}}\" alt=\"Blog Image\"><div class=\"card-content\"><div class=\"card-title\">{{needs.filter-webhook-data.outputs.english_post.title}}</div><div class=\"card-description\">{{needs.filter-webhook-data.outputs.english_post.feature}}</div></div></a></div><p class=\"footer\">You're receiving this email because you subscribed to updates. <br></p></body></html>"
          }'
          echo "## English email sent to English subscribers"

  send-spanish-emails:
    runs-on: ubuntu-latest
    needs: [filter-webhook-data, retrieve-subscribers]
    if: ${{ needs.filter-webhook-data.outputs.spanish_post != '' }}
    steps:
      - name: 'Filter Spanish Subscribers'
        id: filter_spanish
        run: |
          echo "## Filtering Spanish subscribers (language == 'es')"
          SPANISH_SUBSCRIBERS=$(echo "${{ needs.retrieve-subscribers.outputs.subscribers_data }}" | jq -r '.[] | select(.language == "es") | .email' | tr '\n' ',')
          echo "spanish_emails=${SPANISH_SUBSCRIBERS}" >> "$GITHUB_ENV"
          echo "spanish_emails=${SPANISH_SUBSCRIBERS}" >> "$GITHUB_OUTPUT"
          echo "Spanish Subscribers: $spanish_emails"

      - name: 'Send Email to Spanish Subscribers'
        run: |
          echo "## Sending email to Spanish subscribers"
          curl -X POST "https://api.buttondown.email/v1/emails" \
          -H "Authorization: Token ${{ secrets.BUTTONDOWN_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "subject": "Nuevo: {{needs.filter-webhook-data.outputs.spanish_post.title}}",
            "from": "harry-kelleher@buttondown.email",
            "to": "${{ steps.filter_spanish.outputs.spanish_emails }}",
            "html_body": "<!DOCTYPE html><html lang=\"es\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Nuevo Blog Publicado</title><style>@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap');body{font-family:'Inter',sans-serif;background-color:#f8f9fa;color:#333;text-align:center;padding:40px 0;}.card-container{display:flex;justify-content:center;align-items:center;margin:20px;}.card{max-width:500px;background:white;border-radius:12px;box-shadow:0px 4px 12px rgba(0,0,0,0.1);overflow:hidden;text-decoration:none;transition:transform 0.2s ease-in-out;}.card:hover{transform:scale(1.03);}.card img{width:100%;height:auto;border-bottom:1px solid #ddd;}.card-content{padding:20px;}.card-title{font-size:20px;font-weight:600;margin-bottom:10px;color:#222;}.card-description{font-size:16px;font-weight:400;color:#555;line-height:1.5;}.footer{margin-top:30px;font-size:14px;color:#777;}</style></head><body><div class=\"card-container\"><a href=\"{{needs.filter-webhook-data.outputs.spanish_post.url}}\" class=\"card\"><img src=\"{{needs.filter-webhook-data.outputs.spanish_post.imageUrl}}\" alt=\"Blog Image\"><div class=\"card-content\"><div class=\"card-title\">{{needs.filter-webhook-data.outputs.spanish_post.title}}</div><div class=\"card-description\">{{needs.filter-webhook-data.outputs.spanish_post.feature}}</div></div></a></div><p class=\"footer\">Est√°s recibiendo este correo porque te suscribiste a actualizaciones. <br></p></body></html>"
          }'
          echo "## Spanish email sent to Spanish subscribers"